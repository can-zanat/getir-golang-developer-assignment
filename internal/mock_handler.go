// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/handler.go

// Package internal is a generated GoMock package.
package internal

import (
	model "main/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockActions is a mock of Actions interface.
type MockActions struct {
	ctrl     *gomock.Controller
	recorder *MockActionsMockRecorder
}

// MockActionsMockRecorder is the mock recorder for MockActions.
type MockActionsMockRecorder struct {
	mock *MockActions
}

// NewMockActions creates a new mock instance.
func NewMockActions(ctrl *gomock.Controller) *MockActions {
	mock := &MockActions{ctrl: ctrl}
	mock.recorder = &MockActionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockActions) EXPECT() *MockActionsMockRecorder {
	return m.recorder
}

// GetInfo mocks base method.
func (m *MockActions) GetInfo(request model.GetInfoRequest) model.GetInfoResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInfo", request)
	ret0, _ := ret[0].(model.GetInfoResponse)
	return ret0
}

// GetInfo indicates an expected call of GetInfo.
func (mr *MockActionsMockRecorder) GetInfo(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInfo", reflect.TypeOf((*MockActions)(nil).GetInfo), request)
}
